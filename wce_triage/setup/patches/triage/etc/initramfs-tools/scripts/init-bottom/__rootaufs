#!/bin/sh
#
# Copyright 2019 Naoyuki Tai
#
# MIT License
#
# Obviously, the idea came from the Nicholas A. Schembri (Thanks!) but
# the original is outdated and does not work well with Ubuntu 18.04.
# I rewrote. Things are mostly compatible but rather than stopping
# during boot, leave the breadcrumbs in fstab.

case $1 in
prereqs)
  exit 0
  ;;
esac

export aufs

# Scan aufs= and do something. Only appropriate value for aufs= is tmpfs or debug
# while doing so, steal root=
for x in $(cat /proc/cmdline); do 
  case $x in 
  root=*)
    ROOTNAME=${x#root=}
    ;;
  aufs=*)
    aufs=${x#aufs=}
    case $aufs in
    *debug*)
      aufs=tmpfs
      aufsdebug=1
      ;;
    esac    
    ;;
  esac
done

if [ "$aufs" != "tmpfs" ]; then
  exit 0
fi

#
# Make the mount points on the init root file system
#
[ -d /aufs ] || mkdir /aufs
[ -d /rw ]   || mkdir /rw
[ -d /ro ]   || mkdir /ro

if [ ! -d /aufs ] ; then
  echo    ***** root-aufs error: /aufs does not exis. *****
  exit 0
fi

#
# mount the temp file system and move real root out of the way
#
mount -t tmpfs aufs-tmpfs /rw
mount --move ${rootmnt} /ro 
#
#
if [ $? -ne 0 ]; then
  echo    ***** root-aufs error:  ${rootmnt} failed to move to /ro *****
  exit 0
fi

#
# Mount aufs to /aufs
#
mount -t aufs -o dirs=/rw:/ro=ro aufs /aufs
#
if [ $? -ne 0 ]; then
  echo    ***** root-aufs error:      Failed to mount /aufs files system *****
  exit 0
fi

# Test for mount points on aufs file system

[  -d /aufs/ro ] || mkdir /aufs/ro
[  -d /aufs/rw ] || mkdir /aufs/rw

#
# The real root file system is hidden on /ro of the init file system.  move it to /ro 
#
mount --move /ro /aufs/ro
#
if [ $? -ne 0 ]; then
  echo    ***** root-aufs error:      Failed to move /ro /aufs/ro  *****
  exit 0
fi

#
# tmpfs file system is hidden on /rw
#
mount --move /rw /aufs/rw
#
if [ $? -ne 0 ]; then
  echo    ***** root-aufs error:      Failed to move /rw /aufs/rw  *****
  exit 0
fi

#
#*********** fix fstab on tmpfs ******************
#
# this is not on the real file system.  This is created on the tmpfs each time the system boots.
#
# The init process will try to mount the root filesystem listed in fstab.
# - / and swap must be removed.  
# - The root file system must be mounted on /ro not on /

cat <<EOF >/aufs/etc/fstab
#
# RootAufs has mounted the root file system in ram
#
# Debug: Remove the root file system and swap from fstab
# Debug:   ROOTNAME $ROOTNAME
EOF

#
# Remove root and swap from the original fstab
#
fgrep -v -e ' / ' /aufs/ro/etc/fstab | fgrep -v swap >>/aufs/etc/fstab  
#
if [ $? -ne 0 ]; then
  echo  ***** root-aufs error:      Failed to create /aufs/etc/fstab  *****
  #exit 0
fi

#
# When there is a ROOT, it could be "very messy" when it's NFS mount.
#
if [ x${ROOT} != x } ; then

ROOTTYPE=$(fgrep -e "${ROOT}" /proc/mounts|cut -d' ' -f3)
ROOTOPTIONS=$(fgrep -e "${ROOT}" /proc/mounts|cut -d' ' -f4)

cat >> /aufs/etc/fstab <<EOF
#
${ROOT} /ro ${ROOTTYPE} ${ROOTOPTIONS} 0 0
EOF

fi

# Copyright 2008 Joaquín I. Bogado García
# fix para apparmor, se desactiva y listo ( From the lethe project. )
#
# ntai: Not quite sure this is still needed, but this is about getting
# rid fo apparmor during booting
#
[ -e /scripts/init-bottom/_apparmor ] && rm /scripts/init-bottom/_apparmor
[ -e /aufs/etc/init.d/apparmor ]      && rm /aufs/etc/init.d/apparmor

#
mount --move /aufs ${rootmnt}

exit 0
