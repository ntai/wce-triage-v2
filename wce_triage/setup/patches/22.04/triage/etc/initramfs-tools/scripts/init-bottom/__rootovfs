#!/bin/sh
#
# Copyright 2019 Naoyuki Tai
#
# MIT License
#
# Obviously, the idea came from the Nicholas A. Schembri (Thanks!) but
# the original is outdated and does not work well with Ubuntu 18.04.
# I rewrote. Things are mostly compatible but rather than stopping
# during boot, leave the breadcrumbs in fstab.

case $1 in
prereqs)
  exit 0
  ;;
esac

export ovfs

# Scan aufs= and do something. Only appropriate value for aufs= is tmpfs or debug
# while doing so, steal root=
for x in $(cat /proc/cmdline); do 
  case $x in 
  root=*)
    ROOTNAME=${x#root=}
    ;;
  aufs=*)
    ovfs=${x#aufs=}
    case $ovfs in
    *debug*)
      ovfs=tmpfs
      ovfsdebug=1
      ;;
    esac    
    ;;
  ovfs=*)
    ovfs=${x#ovfs=}
    case $ovfs in
    *debug*)
      ovfs=tmpfs
      ovfsdebug=1
      ;;
    esac    
    ;;
  esac
done

if [ "$ovfs" != "tmpfs" ]; then
  exit 0
fi

#
# Make the mount points on the init root file system
#
# /ovfs - the future root dir
# /rw - upper
# /ro - lower
#
[ -d /ovfs ]       || mkdir /ovfs
[ -d /rw ]         || mkdir /rw
[ -d /ro ]         || mkdir /ro

if [ ! -d /ovfs ] ; then
  echo    ***** root-ovfs error: /ovfs does not exist. *****
  exit 0
fi

#
# mount the temp file system and move real root out of the way
#
mount -t tmpfs tmpfs /rw
if [ $? -ne 0 ]; then
  echo    ***** root-ovfs error:  Mounting tmpfs on /rw failed  *****
  exit 0
fi
#

mkdir /rw/.work
if [ $? -ne 0 ]; then
  echo    ***** root-ovfs error:  mkdir /rw/.work failed  *****
  exit 0
fi

#
#
mount --move ${rootmnt} /ro 
if [ $? -ne 0 ]; then
  echo    ***** root-ovfs error:  ${rootmnt} failed to move to /ro *****
  exit 0
fi


#
# Mount filesystems to /ovfs
#
mount -t overlay overlay -olowerdir=/ro,upperdor=/rw,workdir=/rw/.work /ovfs
#
if [ $? -ne 0 ]; then
  echo    ***** root-ovfs error:      Failed to mount /ovfs files system *****
  exit 0
fi

# Test for mount points on ovfs file system

[  -d /ovfs/ro ] || mkdir /ovfs/ro
[  -d /ovfs/rw ] || mkdir /ovfs/rw

#
# The real root file system is hidden on /ro of the init file system.  move it to /ro 
#
mount --move /ro /ovfs/ro
#
if [ $? -ne 0 ]; then
  echo    ***** root-ovfs error:      Failed to move /ro /ovfs/ro  *****
  exit 0
fi

#
# tmpfs file system is hidden on /rw
#
mount --move /rw /ovfs/rw
#
if [ $? -ne 0 ]; then
  echo    ***** root-ovfs error:      Failed to move /rw /ovfs/rw  *****
  exit 0
fi

#
#*********** fix fstab on tmpfs ******************
#
# this is not on the real file system.  This is created on the tmpfs each time the system boots.
#
# The init process will try to mount the root filesystem listed in fstab.
# - / and swap must be removed.  
# - The root file system must be mounted on /ro not on /

cat <<EOF >/ovfs/etc/fstab
#
# RootOvfs has mounted the root file system in ram
#
# Debug: Remove the root file system and swap from fstab
# Debug:   ROOTNAME $ROOTNAME
EOF

#
# Remove root and swap from the original fstab
#
fgrep -v -e ' / ' /ovfs/ro/etc/fstab | fgrep -v swap >>/ovfs/etc/fstab  
#
if [ $? -ne 0 ]; then
  echo  ***** root-ovfs error:      Failed to create /ovfs/etc/fstab  *****
  #exit 0
fi

#
# When there is a ROOT, it could be "very messy" when it's NFS mount.
#
if [ x${ROOT} != x ] ; then

ROOTTYPE=$(fgrep -e "${ROOT}" /proc/mounts|cut -d' ' -f3)
ROOTOPTIONS=$(fgrep -e "${ROOT}" /proc/mounts|cut -d' ' -f4)

cat >> /ovfs/etc/fstab <<EOF
#
${ROOT} /ro ${ROOTTYPE} ${ROOTOPTIONS} 0 0
EOF

fi

# Copyright 2008 Joaquín I. Bogado García
# fix para apparmor, se desactiva y listo ( From the lethe project. )
#
# ntai: Not quite sure this is still needed, but this is about getting
# rid fo apparmor during booting
#
[ -e /scripts/init-bottom/_apparmor ] && rm /scripts/init-bottom/_apparmor
[ -e /ovfs/etc/init.d/apparmor ]      && rm /ovfs/etc/init.d/apparmor

#
# Finally, move the /ovfs to the root mount.
#
mount --move /ovfs ${rootmnt}

exit 0
